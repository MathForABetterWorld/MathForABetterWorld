// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  email         String       @unique
  name          String
  phoneNumber   String?      @unique
  address       String?
  checkedPallet Pallet[]
  exportedItems ExportItem[]
  shiftsWorked  Shift[]
  employee      Employee?
  employeeId    Int?         @unique
  isActive      Boolean      @default(true)
}

model Employee {
  id             Int     @id @default(autoincrement())
  user           User    @relation(fields: [userId], references: [id])
  userId         Int     @unique
  userName       String  @unique
  hashedPassword String
  token          String?
  role           Role    @default(Employee)
}

model Shift {
  id               Int       @id @default(autoincrement())
  user             User      @relation(fields: [userId], references: [id])
  userId           Int
  start            DateTime  @default(now())
  end              DateTime?
  regularFoodTaken Float     @default(0)
  damagedFoodTaken Float     @default(0)
  duration         Float?
}

model Pallet {
  id             Int         @id @default(autoincrement())
  entryUser      User        @relation(fields: [entryUserId], references: [id])
  entryUserId    Int
  inputDate      DateTime    @default(now()) @db.Date
  expirationDate DateTime?   @db.Date
  weight         Float       @default(0)
  company        Distributor @relation(fields: [companyId], references: [id])
  companyId      Int
  rack           Rack?       @relation(fields: [rackId], references: [id])
  rackId         Int?
  description    String?
  categoryIds    Int[]
  barcodes       Int[]
  isActive       Boolean     @default(true)
}

model ExportItem {
  id         Int               @id @default(autoincrement())
  weight     Float             @default(0)
  exportDate DateTime          @default(now()) @db.Date
  category   Category          @relation(fields: [categoryId], references: [id])
  categoryId Int
  user       User              @relation(fields: [userId], references: [id])
  userId     Int
  location   DonationLocation @relation(fields: [locationId], references: [id])
  locationId Int
  exportType ExportType        @default(Regular)
}

enum ExportType {
  Recycle
  Compost
  Regular
  Damaged
  Return
}

model Distributor {
  id               Int      @id @default(autoincrement())
  name             String   @unique
  distributedEntry Pallet[]
  isActive         Boolean  @default(true)
}

model Rack {
  id          Int      @id @default(autoincrement())
  location    String // 1A, 2B, etc
  description String
  weightLimit Float?
  pallet      Pallet[]
  isActive    Boolean  @default(true)
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  exports     ExportItem[]
  isActive    Boolean      @default(true)
}

enum Role {
  Admin
  Employee
}

model Location {
  id   Int    @id @default(autoincrement())
  name String
}

model DonationLocation {
  id        Int          @id @default(autoincrement())
  name      String
  longitude String
  latitude  String
  exports   ExportItem[]
  isActive  Boolean      @default(true)
}
